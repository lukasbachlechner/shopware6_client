{
	// Place your shopware6_sdk workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create a serializable Model": {
		"prefix": "model",
		"body": [
		  "import 'package:json_annotation/json_annotation.dart';",
		  "",
		  "import '../contracts/contracts.dart';",
		  "import '../models/models.dart';",
		  "import '../types.dart';",
		  "",
		  "part '$TM_FILENAME_BASE.g.dart';",
		  "",
		  "@JsonSerializable()",
		  "class ${1:${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}} implements Model {",
		  "  final ID? id;",
		  "",
		  "  $1({ this.id });",
		  "",
		  "  factory $1.fromJson(Json json) => _\\$$1FromJson(json);",
		  "",
		  "  @override ",
		  "  Json toJson() => _\\$$1ToJson(this);",
		  "}"
		],
		"description": "Create a serializable Model"
	  },
	  "Create a Chopper service": {
		"prefix": "service",
		"body": [
		  "import 'package:chopper/chopper.dart';",
		  "",
		  "part '$TM_FILENAME_BASE.chopper.dart';",
		  "",
		  "@ChopperApi()",
		  "abstract class ${1:${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}} extends ChopperService {",
		  "  static $1 create([ChopperClient? client]) =>",
		  "      _\\$$1(client);",
		  "}",
		  ""
		],
		"description": "Create a Chopper service"
	  },
	  "Add a converter entry to converters": {
		"prefix": "converter",
		"body": [
		  "$1: $1.fromJson,"
		],
		"description": "Add a converter entry to converters"
	  }
}